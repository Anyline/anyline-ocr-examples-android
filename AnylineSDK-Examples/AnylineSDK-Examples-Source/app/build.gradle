buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.8.2.0"
    }
}

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'

    // Make sure that you have the Google services Gradle plugin

    // Add the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'

    id 'com.google.firebase.appdistribution'
    id "de.mannodermaus.android-junit5" version "1.8.2.1"
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        versionCode versions.anyline_scanner_app_code
        versionName versions.anyline_scanner_app_name

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        multiDexEnabled true
    }

    /* More info about Java 8 library desugaring:
     * https://developer.android.com/studio/releases/gradle-plugin#j8-library-desugaring */
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude 'META-INF/proguard/coroutines.pro'
        /* Use the following method to reduce your app size by only including the modules you need.
         * For more details see
         * https://documentation.anyline.com/toc/platforms/android/getting_started.html */
        aaptOptions {
            // Enter any modules into "used_modules" you would like to keep and use
            def used_modules = [
                    "module_anyline_ocr",
                    "module_barcode",
                    "module_document",
                    "module_energy",
                    "module_id",
                    "module_license_plate",
                    "module_tire"
            ].toList()

            // Below is the full list of modules
            def all_modules = [
                    "module_anyline_ocr",
                    "module_barcode",
                    "module_document",
                    "module_energy",
                    "module_id",
                    "module_license_plate",
                    "module_tire"
            ].toList()

            // All used modules are kept, the rest are discarded (to shrink your app)
            all_modules.removeAll(used_modules)

            def all_removed_modules = all_modules.join(":")
            ignoreAssetsPattern all_removed_modules
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/TrainedModels'] } }

    flavorDimensions "sdkSource"
    productFlavors {
        maven {
            dimension "sdkSource"
        }
    }
}

repositories {
    maven {
        url 'https://anylinesdk.blob.core.windows.net/maven/'
    }
}

configurations {
    customImplementation
}

/* Lifecycle 2.5.0 needs to temporarily have the following added, see also:
 * https://stackoverflow.com/questions/70992947/how-do-i-resolve-error-message-inheritance-from-an-interface-with-jvmdefault */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
}

dependencies {
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'com.google.android.material:material:1.4.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.activity:activity-ktx:1.2.0"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"

    // for update manager
    //implementation 'com.google.android.play:core:1.9.0'

    // include AnylineSDK from maven
    mavenImplementation "io.anyline:anylinesdk:${versions.anyline_android_sdk_name}"
    // When integrating without buildFlavors or externally defined versions, use and adapt like below:
    // implementation "io.anyline:anylinesdk:MAJOR.MINOR.PATCH"

    //Play core library
    implementation 'com.google.android.play:core-ktx:1.8.1'

    //Kotlin
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    //Kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    /* Desugaring, see https://github.com/google/desugar_jdk_libs/blob/master/CHANGELOG.md
     * Version 2.0.0 requires AGP 7.4.0 */
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.0'

    // Kotlin Serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2")
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")

    // Nav Component
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.2"

    //ViewModel
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    customImplementation("io.anyline:anylinesdk:${versions.anyline_android_sdk_name}")

    // Testing
    testImplementation "junit:junit:4.13"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
    testImplementation "io.mockk:mockk:1.10.6"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.0"
}

